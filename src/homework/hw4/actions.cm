
// ********************************************
// * common action functions for thanksgiving *
// ********************************************

string[NAME_LEN] temp_name;

void hayride(string name, int type_num, int type_id) {
    string[ACTION_LEN] temp_str;
    sprintf(temp_str, "%10s is waiting for a hayride.", name);
    print(temp_str);

    // add to hayride waiting queue
    enqueue(type_num, type_id);
    
    // suspend process
    //  process will be revive'd by father
    suspend();

    // get back to house and clean up
    delay(2);
}

void sit_at_table(string name) {
    string[ACTION_LEN] temp_str;
    sprintf(temp_str, "%10s has cleaned up and is sitting at table.", name);
    print(temp_str);

    wait(seated);
        num_seated++;

        if (num_seated == NUM_OTHERS) {
            signal(turkey_can_be_carved);
        }
    signal(seated);
}

void eat_dinner(string name) {
    string[ACTION_LEN] temp_str;

    // wait for turkey to be carved
    wait(turkey_is_carved);

    sprintf(temp_str, "%10s is eating.", name);
    print(temp_str);

    // eating takes time
    delay(2);
}

void is_finished_eating(string name) {
    string[ACTION_LEN] temp_str;
    sprintf(temp_str, "%10s is done eating.", name);
    print(temp_str);

    wait(wait_excused);
        done_eating++;

        if (done_eating == NUM_OTHERS) {
            signal(can_be_excused);
        }
    signal(wait_excused);
    
    // wait to be excused
    wait(excused);
}
