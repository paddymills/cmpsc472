//***************************************************
//** HW#3 Problem 2: use for parts a,b, c, and d   **
//**               order.cm                        **
//**                                               **
//**   Patrick Miller                              **
//***************************************************

semaphore p1done, p2done;

///////////////////////////////////
atomic  void PrintOut(int pid)
{
  switch (pid)
  {  case 1: 
     {cout << "Process 1" << endl; break;}
     case 2: 
     {cout << "Process 2"  << endl; break;}
     case 3: 
     {cout << "Process 3" << endl; break;}
  } 
}


///////////////////////////////////
void Process1()
{
  PrintOut(1); 
  signal(p1done);
}


///////////////////////////////////
void Process2()
{
  wait(p1done);
  PrintOut(2); 
  signal(p2done);
}


///////////////////////////////////
void Process3()
{
  wait(p2done);
  PrintOut(3); 
}


///////////////////////////////////
main()
{
  initialsem(p1done, 0);
  initialsem(p2done, 0);

  cobegin {     // This will run all 3 processes concurrently
    Process1(); 
    Process2(); 
    Process3();
  }
}
