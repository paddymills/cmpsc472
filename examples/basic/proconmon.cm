/* Program producerconsumer */

monitor ProducerConsumer  {
   int count;			      /* number of items in buffer */
   condition full, empty;	      /* condition variables */

void append () {
   if (count == N) waitc(full);       //if buffer is full, block
   //put_item;                        //put item in buffer
   count++;                           //increment count of full slots
   if (count == 1) signalc(empty);    //if buffer was empty, wake consumer
}

void take () {
   if (count == 0) waitc(empty);       //if buffer is empty, block
   //remove_item;                      //remove item from buffer
   count--;                            //decrement count of full slots
   if (count == N - 1) signalc(full);  //if buffer was full, wake producer
}

init {
   count = 0;
     }
} //end mon

void producer() {
   while (true) {
      //produce_item;                  //make a new item
      append();                        //call the append function in monitor
   }
}

void consumer() {
   while (true) {
      take();                          //call the take function in monitor
      //consume_item;                  //consume an item
   }
}

void main()  {
   cobegin {
      producer();
      consumer();
   }
}
