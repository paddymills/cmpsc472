/////////////////////////////////////////////////
/* This program demonstrates weighted access 
   to a shared resource                        */
/////////////////////////////////////////////////

const int m = 5;
semaphore countsem;


void val1 (char id)
{
	int i;
	
	for ( i = 1; i <= m; i = i + 1)
	{
		wait(countsem);
		
	cout <<" 1"<<id<<" 1"<<id<<" 1"<<id
	<<" 1"<<id<<" 1"<<id<<" 1"<<id<<" 1"<<id <<endl;
		signal (countsem);
	}
}

void val3 (char id)
{
	int i;
	
	for ( i = 1; i <= m; i = i + 1)
	{
		wait(countsem);
		wait(countsem);
		wait(countsem);
		
		cout <<" 3" <<id<<" 3"<<id<<" 3" <<id<<" 3" <<id
			<<" 3"<<id<<" 3" <<id<<" 3"<<id<<endl;
		signal (countsem);
		signal (countsem);
		signal (countsem);
	}

}

main()
{	
	initialsem(countsem, 5 );
	cout <<endl;
	cobegin 
	{
		val1 ( 'a'); val1 ('b'); val1 ( 'c'); 
		val3('D'); val3('E'); 
	}
	
}
